@* 
`_` of `_Layout`: layout file instead of normal view file

Shared layout among other views
*@

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,charset initial-scale=1.0">
    <title>Supermarket Management</title>

    @* Add bootstrap css file *@
    <link rel="stylesheet" href="~/lib/bootstrap/css/bootstrap.css">
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-lg bg-body-tertiary">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="home" asp-action="index">Supermarket</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        @* <a class="nav-link text-dark" href="/home/index">Home</a> *@

                        @* Use tag helper as Categories/Index.cshtml *@
                        <a class="nav-link text-dark" asp-controller="home" asp-action="index">Home</a>
                    </li>

                    <li class="nav-item">
                        @* <a class="nav-link text-dark" href="/categories/index">Categories</a> *@
                        <a class="nav-link text-dark" asp-controller="categories" asp-action="index">Categories</a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-controller="products" asp-action="index">Products</a>
                    </li>
                </ul>
            </div>
        </div>
        </nav>
    </header>
    <div class="container">

        @* Bootstrap Spacing, padding bottom 3 *@
        <div class="pb-3">
            @* 
            Specify part of view to this placeholder
                Must pass a name parameter

                Second parameter:
                    true or default: this is a required section, all of the view will have to use the title section
                    false: this is a optional section

                Syntax:
                    @RenderSection("title", false)

                    Or using Named arguments
                    @RenderSection("title", required: false)
            *@
            @RenderSection("title")
            <hr>
        </div>

        <div>
            @*
            Placeholder for each view

            If we put any Javascript in the Categories/Index.cshtml, it is actually put in this <div> element 
                Which is not best practice

            Best practice is to render Javascript file right before </body> closing tag
                We can create an other section
            *@
            @RenderBody()
        </div>
    </div>

    @* 
    I want to use the async version here because we may have a lot of script to render
        So use async version to improve the performance
    *@
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>