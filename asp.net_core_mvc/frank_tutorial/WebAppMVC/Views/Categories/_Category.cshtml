@*
_ of _Category.cshtml
    Tells us this is not normal
    It is special view, in this case, it's partial view
*@

@model Category

@* Get information from the controller *@
@{
    string action = ViewBag.Action ?? string.Empty;
}

@* Use tag helper to specify if the submit button is pressed, where do the data go to be processed *@
<form method="post" asp-controller="categories" asp-action="@action">

    @*
    ?. null-conditional operator
        If `a` evaluates to `null`, the result of `a?.x` or `a?[x]` is `null`
        If `a` evaluates to non-null, the result of `a?.x` or `a?[x]` is the same as the result of `a.x` or `a[x]`, respectively 

    For the equality operator ==
        If both operands are `null`, the result is `true`
        If only one of the operands is `null`, the result is false
            Otherwise, the contained values of operands are compared
    *@
    @if (action?.ToLower() == "edit")
    {
        @* 
        Hidden field is not visible to the users but sill can be sent to controller when user submits the form
            Hidden field will send CategoryId to controller

        Tag help asp-for makes <input> element render into
            <input type="hidden" data-val="true" data-val-required="The CategoryId field is required." id="CategoryId" name="CategoryId" value="1">
            Therefore, value which is CategoryId will be sent back to controller

            The value of Tag help is the model property
            Can use property name CategoryId directly, no need to use @Model.CategoryId
        *@
        <input type="hidden" asp-for="CategoryId">
    }

    @*
    .text-danger: Bootstrap class

    asp-validation-summary
        ValidationSummary.All will display both property and model level validations messages
        ValidationSummary.ModelOnly will display only validation messages that apply to the model level
        ValidationSummary.None is specified, the tag helper will do nothing
    *@
    <div class="text-danger" asp-validation-summary="All"></div>

    <div class="row mb-3">
        <div class="col-2">
            @*
            asp-for 
                Will look at Category.Name property and genearte the string for us when it renders the HTML
                <label> element is rendered as 
                <label class="col-form-label" for="Name">Name</label>
            
            col-form-label
                Be sure to add .col-form-label to your <label>s as well so theyâ€™re vertically centered with their associated form controls
            
            The edit action method has to handle the value of the Name and Description field
            *@
            <label asp-for="Name" class="col-form-label"></label>
        </div>

        <div class="col-6">
            @* 
            <input> element will be rendered in HTML as
                <input type="text" class="form-control" data-val="true" data-val-required="The Name field is required." id="Name" name="Name" value="Beverage">
                Tag helper asp-for generates id and name

                When form submit button is pressed, the model binding process will recognize which property in the class this input field needs to be bound to
            *@
            <input type="text" asp-for="Name" class="form-control">
        </div>

        @* .col: choose column size automatically *@
        <div class="col">
            @* Only show validation messages for specific field *@
            <span class="text-danger" asp-validation-for="Name"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label asp-for="Description" class="col-form-label"></label>
        </div>

        <div class="col-6">
            <input type="text" asp-for="Description" class="form-control">
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <input type="submit" class="btn btn-primary" value="Save">
        </div>

        <div class="col-6">
        </div>
    </div>

</form>
