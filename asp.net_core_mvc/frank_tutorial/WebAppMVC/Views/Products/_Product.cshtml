@model ProductViewModel

@{
    string action = ViewBag.Action ?? string.Empty;
}

<form method="post" asp-controller="products" asp-action="@action">
    @if (action?.ToLower() == "edit")
    {
        @* Use Product property of ProductViewModel *@
        <input type="hidden" asp-for="Product.ProductId">
    }

    <div class="text-danger" asp-validation-summary="All"></div>

    <div class="row mb-3">
        <div class="col-2">
            <label asp-for="Product.CategoryId" class="col-form-label"></label>
        </div>

        <div class="col-6">
            @*
            The <select> element is used to create a drop-down list
            
            asp-for tag helper even can select the option based on the Product.CategoryId we send
            *@
            <select asp-for="Product.CategoryId" class="form-control">
                <option>- Please Select -</option>

                @if (Model.Categories != null && Model.Categories.Count() > 0)
                {
                    foreach (var category in Model.Categories)
                    {
                        <option value="@category.CategoryId">@category.Name</option>
                    }
                }
            </select>
        </div>

        <div class="col">
            <span class="text-danger" asp-validation-for="Product.CategoryId"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label asp-for="Product.Name" class="col-form-label"></label>
        </div>

        <div class="col-6">
            <input type="text" asp-for="Product.Name" class="form-control">
        </div>

        <div class="col">
            <span class="text-danger" asp-validation-for="Product.Name"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label asp-for="Product.Price" class="col-form-label"></label>
        </div>

        <div class="col-6">

            @*
            Input type is number

            min="0"
                minimum value is 0
                We will get validation information from browser
                Even without it, the [Range(0, int.MaxValue)] attribute which decorates Price property kicks in

            step="any": if you don't use it then you can only use integer
            *@
            <input type="number" asp-for="Product.Price" class="form-control" min="0" step="any">

        </div>

        <div class="col">
            <span class="text-danger" asp-validation-for="Product.Price"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <label asp-for="Product.Quantity" class="col-form-label"></label>
        </div>

        <div class="col-6">
            <input type="number" asp-for="Product.Quantity" class="form-control" min="1">
        </div>

        <div class="col">
            <span class="text-danger" asp-validation-for="Product.Quantity"></span>
        </div>
    </div>

    <div class="row mb-3">
        <div class="col-2">
            <input type="submit" class="btn btn-primary" value="Save">
        </div>

        <div class="col-6">
        </div>
    </div>
</form>